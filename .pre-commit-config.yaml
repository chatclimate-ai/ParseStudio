# Pre-commit configuration for ParseStudio
# See https://pre-commit.com for more information

repos:
  # Ruff - Fast Python linter and formatter
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.12.12
    hooks:
      # Run the linter
      - id: ruff
        args: [--fix]
        types_or: [python, pyi]
      # Run the formatter
      - id: ruff-format
        types_or: [python, pyi]

  # Black - Python code formatter (backup/alternative to ruff-format)
  - repo: https://github.com/psf/black
    rev: 25.1.0
    hooks:
      - id: black
        language_version: python3
        exclude: ^(tests/.*\.py)$  # Skip tests for now during initial setup

  # isort - Import sorting
  - repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
      - id: isort
        args: ["--profile", "black", "--filter-files"]

  # mypy - Static type checking
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.17.1
    hooks:
      - id: mypy
        additional_dependencies: [types-requests]
        args: [--ignore-missing-imports]
        exclude: ^(tests/.*\.py)$  # Skip tests initially

  # Built-in pre-commit hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      # General file checks
      - id: trailing-whitespace
        args: [--markdown-linebreak-ext=md]
      - id: end-of-file-fixer
      - id: check-yaml
        args: [--unsafe]  # Allow custom YAML tags
      - id: check-toml
      - id: check-json
      - id: check-xml
      - id: pretty-format-json
        args: [--autofix, --indent=2]

      # Python-specific checks
      - id: check-ast  # Check Python AST
      - id: debug-statements  # Check for pdb imports
      - id: name-tests-test
        args: [--pytest-test-first]

      # Git and merge checks
      - id: check-merge-conflict
      - id: check-added-large-files
        args: [--maxkb=1000]
      - id: mixed-line-ending
        args: [--fix=lf]

  # Security linting with bandit
  - repo: https://github.com/PyCQA/bandit
    rev: 1.8.0
    hooks:
      - id: bandit
        args: [-c, pyproject.toml]
        additional_dependencies: ["bandit[toml]"]
        exclude: ^tests/

# Configuration for pre-commit.ci (if using CI integration)
ci:
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit hooks

    for more information, see https://pre-commit.ci
  autofix_prs: true
  autoupdate_branch: ''
  autoupdate_commit_msg: '[pre-commit.ci] pre-commit autoupdate'
  autoupdate_schedule: weekly
  skip: []
  submodules: false
