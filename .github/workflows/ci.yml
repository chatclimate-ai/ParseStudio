name: CI Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-13, windows-latest]
        python-version: ['3.12.7']

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        shell: bash
        run: |
          if [ $RUNNER_OS == "Windows" ]; then
            pwsh -Command "(Invoke-WebRequest -Uri https://install.python-poetry.org -UseBasicParsing).Content | python -"
            echo "$env:USERPROFILE\\.poetry\\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8
          else
            curl -sSL https://install.python-poetry.org | python3 -
            echo "$HOME/.local/bin" >> $GITHUB_PATH
          fi

      - name: Install System Dependencies (MacOS Only)
        if: runner.os == 'macOS'
        run: |
          brew update
          brew install libffi openssl
        shell: bash

      - name: Add PKG_CONFIG_PATH (MacOS Only)
        if: runner.os == 'macOS'
        run: echo "PKG_CONFIG_PATH=/usr/local/opt/openssl/lib/pkgconfig:/usr/local/opt/libffi/lib/pkgconfig" >> $GITHUB_ENV
        shell: bash

      - name: Verify Poetry Installation
        run: poetry --version
        shell: bash

      - name: Configure Poetry Environment
        run: poetry env use python
        shell: bash

      - name: Clear Poetry Cache
        run: poetry cache clear pypi --all
        shell: bash

      - name: Install Dependencies
        run: poetry install --no-interaction --no-root --verbose
        shell: bash

      - name: Run Tests
        run: poetry run pytest
        shell: bash
